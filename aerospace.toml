#####################
### Init settings
#####################

start-at-login = true
after-startup-command = [
    # JankyBorders, shows border only if there are multiple windows in the workspace
    'exec-and-forget [ $(aerospace list-windows --workspace focused | wc -l) -eq 1 ] && borders width=0.0 || borders active_color=0xffacab3c inactive_color=0x00000000 width=8.0',
    'workspace 1'
]

enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

accordion-padding = 30
default-root-container-layout = 'tiles' # Possible values: tiles|accordion
default-root-container-orientation = 'auto' # 'auto' means: wide monitor gets 'horizontal', tall monitor gets 'vertical'

# Mouse follows focus when focused monitor changes and window changes (check PiP behaviour with this, yabai didn't like it)
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
on-focus-changed = [
  'exec-and-forget [ $(aerospace list-windows --workspace focused | wc -l) -eq 1 ] && borders width=0.0 || borders active_color=0xffacab3c inactive_color=0x00000000 width=8.0',
   # 'move-mouse window-lazy-center'  # Mouse lazily follows any focus (window or workspace)
]

[gaps]
inner.horizontal = [{ monitor.'built-in' = 3 }, { monitor.main = 6 }, 6]
inner.vertical =   [{ monitor.'built-in' = 3 }, { monitor.main = 6 }, 6]
outer.left =       [{ monitor.'built-in' = 3 }, { monitor.main = 6 }, 6]
outer.bottom =     [{ monitor.'built-in' = 3 }, { monitor.main = 6 }, 6]
outer.top =        [{ monitor.'built-in' = 3 }, { monitor.main = 6 }, 6]
outer.right =      [{ monitor.'built-in' = 3 }, { monitor.main = 6 }, 6]

# 'move-workspace-to-monitor' doesn't work for workspaces with assigments, so we only assign the ones we don't want to move
[workspace-to-monitor-force-assignment]
# M = ['secondary', 'main']
# P = ['main']
# U = ['secondary', 'main']

#####################
### Main mode settings
#####################

[mode.main.binding]
# Change mode from main
alt-esc = ['mode move']
alt-space = ['mode open']
alt-s = ['mode service']

# Layout
alt-slash = ['layout tiles horizontal vertical']
alt-comma = ['layout accordion horizontal vertical']
alt-period = ['layout floating tiling']

alt-f = ['fullscreen']
ctrl-alt-f = ['layout accordion tiles'] # toggles between layouts to fake a container fullscreen

# Focus
alt-left = ['focus left']
alt-down = ['focus down']
alt-up = ['focus up']
alt-right = ['focus right']
alt-semicolon = ['focus-monitor --wrap-around next']
alt-tab = ['workspace-back-and-forth']

alt-1 = ['workspace 1']
alt-2 = ['workspace 2']
alt-3 = ['workspace 3']
alt-b = ['workspace B'] # Browser
alt-c = ['workspace C'] # Communication
alt-x = ['workspace X'] # Xcode
alt-p = ['workspace P'] # Programming
alt-u = ['workspace U'] # Utilities
alt-m = ['workspace M'] # Media / Music


# Resize
alt-minus = ['resize smart -30']
alt-equal = ['resize smart +30']
alt-0 = ['balance-sizes']

#####################
### Service mode settings
#####################

[mode.service.binding]
esc = ['reload-config', 'exec-and-forget noti -t aerospace -m "Config reloaded! Back to main mode."', 'mode main'] # reload the config and back to main
p = ['exec-and-forget noti -t aerospace -m "Disabled Aerospace"', 'enable toggle']
b = ['exec-and-forget brew services restart borders', 'exec-and-forget noti -t aerospace -m "Restarted borders! Back to main mode."', 'mode main'] # reset borders
r = ['flatten-workspace-tree', 'exec-and-forget noti -t aerospace -m "Reseted layout tree! Back to main mode."', 'mode main'] # reset layout
backspace = ['close-all-windows-but-current',  'exec-and-forget noti -t aerospace -m "Closed all other windows! Back to main mode."', 'mode main']

#####################
### Move mode settings
#####################

[mode.move.binding]
esc = ['mode main'] # exit mode and load main again

left = ['move left']
down = ['move down']
up = ['move up']
right = ['move right']

alt-left = ['join-with left', 'layout accordion tiles']
alt-down = ['join-with down', 'layout accordion tiles']
alt-up = ['join-with up', 'layout accordion tiles']
alt-right = ['join-with right', 'layout accordion tiles']

# Move window and focus to a specific worskpace
alt-1 = ['move-node-to-workspace 1', 'workspace 1', 'mode main']
alt-2 = ['move-node-to-workspace 2', 'workspace 2', 'mode main']
alt-3 = ['move-node-to-workspace 3', 'workspace 3', 'mode main']
alt-b = ['move-node-to-workspace B', 'workspace B', 'mode main'] # Browser
alt-c = ['move-node-to-workspace C', 'workspace C', 'mode main'] # Communication
alt-m = ['move-node-to-workspace M', 'workspace M', 'mode main'] # Media / Music
alt-p = ['move-node-to-workspace P', 'workspace P', 'mode main'] # Programming
alt-x = ['move-node-to-workspace X', 'workspace X', 'mode main'] # Xcode
alt-u = ['move-node-to-workspace U', 'workspace U', 'mode main'] # Utilities

# Move window but without also moving the focus
ctrl-alt-1 = ['move-node-to-workspace 1', 'mode main']
ctrl-alt-2 = ['move-node-to-workspace 2', 'mode main']
ctrl-alt-3 = ['move-node-to-workspace 3', 'mode main']
ctrl-alt-b = ['move-node-to-workspace B', 'mode main'] # Browser
ctrl-alt-c = ['move-node-to-workspace C', 'mode main'] # Communication
ctrl-alt-m = ['move-node-to-workspace M', 'mode main'] # Media / Music
ctrl-alt-p = ['move-node-to-workspace P', 'mode main'] # Programming
ctrl-alt-x = ['move-node-to-workspace X', 'mode main'] # Xcode
ctrl-alt-u = ['move-node-to-workspace U', 'mode main'] # Utilities

alt-tab = ['move-workspace-to-monitor --wrap-around next', 'mode main']

#####################
### Open mode settings
#####################

[mode.open.binding]
esc = ['mode main'] # exit mode and load main again

enter = ['exec-and-forget open -a /Applications/iTerm.app', 'mode main']
alt-enter = ['exec-and-forget open -n /Applications/iTerm.app', 'mode main'] # Always open new window, even if one is already open
b = ['exec-and-forget open -a /Applications/Safari.app', 'mode main']
alt-b = ['exec-and-forget open -n /Applications/Safari.app', 'mode main'] # Always open new window, even if one is already open
s = ['exec-and-forget open -a /Applications/Slack.app', 'mode main']
x = ['exec-and-forget open -a /Applications/Xcode-16.0.0.app', 'mode main']
# d = ['exec-and-forget open -a /Applications/Discord.app', 'mode main']
m = ['exec-and-forget open -a /Applications/Spotify.app', 'mode main']
# o = ['exec-and-forget open -a /Applications/Obsidian.app', 'mode main']

#####################
### Callbacks settings
#####################

[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = ['move-node-to-workspace 2']
[[on-window-detected]]
if.app-id = 'com.googlecode.iterm2'
run = ['move-node-to-workspace 1']
[[on-window-detected]]
if.app-id = 'md.obsidian'
run = ['move-node-to-workspace 2']

# Comunication
[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = ['move-node-to-workspace C']
[[on-window-detected]]
if.app-id = 'net.whatsapp.WhatsApp'
run = ['move-node-to-workspace C']
[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
run = ['move-node-to-workspace C']

# Browser
[[on-window-detected]]
if.app-id = 'com.apple.Safari'
run = ['move-node-to-workspace B']
[[on-window-detected]]
if.app-id = 'com.google.Chrome'
run = ['move-node-to-workspace B']

# Media / Music
[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = ['move-node-to-workspace M']
[[on-window-detected]]
if.app-id = 'org.videolan.vlc'
run = ['move-node-to-workspace M']

# Programming
[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode'
run = ['move-node-to-workspace P']
[[on-window-detected]]
if.app-id = 'com.todesktop.230313mzl4w4u92'
run = ['move-node-to-workspace P']

# Xcode
[[on-window-detected]]
if.app-id = 'com.apple.dt.Xcode'
run = ['move-node-to-workspace X']

[[on-window-detected]]
if.app-id = 'com.apple.iphonesimulator'
run = ['layout floating', 'move-node-to-workspace 3']

[[on-window-detected]]
if.app-id = 'com.marcoscurvello.SimInspector'
run = ['move-node-to-workspace 2']

# Utilities
[[on-window-detected]]
if.app-id = 'com.bitwarden.desktop'
run = ['move-node-to-workspace U']
[[on-window-detected]]
if.app-id = 'com.apple.iCal'
run = ['move-node-to-workspace U']
[[on-window-detected]]
if.app-id = 'com.dygmalab.bazecor'
run = ['move-node-to-workspace U']
[[on-window-detected]]
if.app-id = 'com.proxyman.NSProxy'
run = ['move-node-to-workspace U']

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right
# All possible modifiers: cmd, alt, ctrl, shift
# All possible commands: https://nikitabobko.github.io/AeroSpace/commands
